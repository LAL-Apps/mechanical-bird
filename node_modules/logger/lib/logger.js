var util = require('util');

var showDebug = false;

//ansicodes for colored output
var ansicodes = {
  'reset': '\033[0m',
  'bold': '\033[1m',
  'italic': '\033[3m',
  'underline': '\033[4m',
  'blink': '\033[5m',
  'black': '\033[30m',
  'red': '\033[31m',
  'green': '\033[32m',
  'yellow': '\033[33m',
  'blue': '\033[34m',
  'magenta': '\033[35m',
  'cyan': '\033[36m',
  'white': '\033[37m'
};


//functions to log
var debug = function(file, msg, force){ 
  var prefix = ': ';
  if (msg) prefix =  '['+file+']: ';
  else msg = file;
  if (showDebug == true || force == true) util.log('Debug'+prefix+msg);
}

var debugObject = function(file, msg, force){
  if (showDebug === true || force === true) util.log('Debug ['+file+']: '+ util.inspect(msg) );
}

var info = function(file, msg){
  var prefix = ': ';
  if (msg) prefix =  '['+file+']: ';
  else msg = file;
  util.log('Info'+prefix+msg);
}

var warn = function(file, msg) {
  var prefix = ': ';
  if (msg) prefix =  '['+file+']: ';
  else msg = file;
  util.log(ansicodes.magenta+'Warning'+prefix+msg+ansicodes.reset);
}

var error = function(file, msg){
  var prefix = ': ';
  if (msg) prefix =  '['+file+']: ';
  else msg = file;
  util.log(ansicodes.red+ansicodes.bold+'Error'+prefix+msg+ansicodes.reset);
  //does not use util.error because that is blocking
}

var wtf = function(file, msg){
  var prefix = ': ';
  if (msg) prefix =  '['+file+']: ';
  else msg = file;
  util.log(ansicodes.red+ansicodes.underline+ansicodes.bold+'WTF'+prefix+msg
    +ansicodes.reset);
}

/** Can be used with a value of true of false to turn debug messages on or of */
var setShowDebug = function(value){
  showDebug = value;
}

//export the functions
module.exports = {
  debug: debug,
  debugObject: debugObject,
  d: debug,
  dObject : debugObject,
  info: info,
  i: info,
  warn: warn,
  w: warn,
  error: error,
  e: error,
  wtf: wtf,
  setShowDebug:setShowDebug
}

